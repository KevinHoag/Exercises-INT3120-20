package com.example.myapplication;

import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.SwitchCompat;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.hardware.Sensor;
import android.hardware.SensorManager;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.provider.Settings;
import android.widget.Button;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {
    private SensorManager mSensorManager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        TextView movementDetection = findViewById(R.id.movement_detection);
        TextView wifiConnectivity = findViewById(R.id.wifi_connectivity);
        SwitchCompat switchButton = findViewById(R.id.switch_button);

        mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);

        if (mSensorManager.getSensorList(Sensor.TYPE_MOTION_DETECT) != null) {
            movementDetection.setText("There is a movement detection");
        } else {
            movementDetection.setText("Null");
        }

        BroadcastReceiver connectivityChangedReceiver = new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                String action = intent.getAction();

                if (ConnectivityManager.CONNECTIVITY_ACTION.equals(action)) {
                    ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
                    NetworkInfo activeNetwork = cm.getActiveNetworkInfo();

                    if (activeNetwork != null && activeNetwork.isConnected()) {
                        wifiConnectivity.setText("Đã kết nối vào mạng");
                    } else {
                        wifiConnectivity.setText("Không có kết nối mạng");
                    }
                }
            }
        };



        switchButton.setOnClickListener(v -> {
            if (switchButton.isChecked()) {
                Intent settingsIntent = new Intent(Settings.Panel.ACTION_INTERNET_CONNECTIVITY);
                startActivity(settingsIntent);

//                WifiManager wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);
//                if (wifiManager.isWifiEnabled()) {
//                    boolean success = wifiManager.setWifiEnabled(false);
//                    if (success) {
//                        Toast.makeText(MainActivity.this, "Đã tắt Wi-Fi", Toast.LENGTH_SHORT).show();
//                    } else {
//                        Toast.makeText(MainActivity.this, "Không thể tắt Wi-Fi", Toast.LENGTH_SHORT).show();
//                    }
//                } else {
//                    Toast.makeText(MainActivity.this, "Wi-Fi đã tắt rồi", Toast.LENGTH_SHORT).show();
//                }
            } else {
                Intent settingsIntent = new Intent(Settings.Panel.ACTION_INTERNET_CONNECTIVITY);
                startActivity(settingsIntent);

//                WifiManager wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);
//                if (!wifiManager.isWifiEnabled()) {
//                    boolean success = wifiManager.setWifiEnabled(false);
//                    if (success) {
//                        Toast.makeText(MainActivity.this, "Đã bật Wi-Fi", Toast.LENGTH_SHORT).show();
//                    } else {
//                        Toast.makeText(MainActivity.this, "Không thể bật Wi-Fi", Toast.LENGTH_SHORT).show();
//                    }
//                } else {
//                    Toast.makeText(MainActivity.this, "Wi-Fi đã bật rồi", Toast.LENGTH_SHORT).show();
//                }
            }
        });

        IntentFilter filter = new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION);
        registerReceiver(connectivityChangedReceiver, filter);
    }
}